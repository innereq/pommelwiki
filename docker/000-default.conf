<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
</VirtualHost>

<Directory /var/www/html/>
	RewriteEngine On
	# Define the rewrite base. This is the URL of the directory that the
	# .htaccess file (if using) resides in
	RewriteBase /
	# Catch requests for index.anything
	RewriteRule ^index / [R=301]

	# Non-capital first letter means that it's not a wiki page
	RewriteRule ^[a-z].*$ - [L]


	## Define the rules that exclude things from the cache:
	# If any of these conditions are true ...

	# Posting a form request
	RewriteCond %{REQUEST_METHOD} POST [OR]
	# A session exists -> the user is signed in
	RewriteCond %{HTTP_COOKIE} PHPSESSID [OR]
	# A query string exists; ie. we're not just viewing a page
	RewriteCond %{QUERY_STRING} .

	# ... serve the file using pmwiki.php
	RewriteRule ^(.*)$ pmwiki.php?n=$1 [QSA,L]


	## If we're this far in the script it's ok to serve files from the cache

	# Root means that we want the wiki homepage
	RewriteCond %{REQUEST_URI} ^/$
	# Does the file exist?
	# Change 'Main.HomePage' here if you're using a different page
	RewriteCond /var/www/html/pub/htmlcache/Main.HomePage.html -f
	# If so, serve it.
	# Change 'Main.HomePage' here if you're using a different page
	RewriteRule ^$ pub/htmlcache/Main.HomePage.html [L]

	# No . or / in the URL means that we want the group main page
	RewriteCond %{REQUEST_URI} ^/([^./?]+)[./]?$
	# Does the file exist?
	# Change '%1.%1' here if you're using a different group main page format
	RewriteCond /var/www/html/pub/htmlcache/%1.%1.html -f
	# If so, serve it.
	RewriteRule ^. pub/htmlcache/%1.%1.html [L]

	# We want Group.Page
	RewriteCond %{REQUEST_URI} ^/([^./]+)[./]([^./]+)/?$
	# Does the file exist?
	RewriteCond /var/www/html/pub/htmlcache/%1.%2.html -f
	# If so, serve it.
	RewriteRule ^. pub/htmlcache/%1.%2.html [L]


	# Cache misses and anything that doesn't fit the above goes to pmwiki.php
	RewriteRule ^(.*)$ pmwiki.php?n=$1 [QSA,L]
</Directory>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
